(use 'midje.repl)
(doc midje)
(doc midje-repl)
(load-facts riel-backend.model.data.global-exercises)
(load-facts test.riel-backend.model.data.global-exercises)
(load-facts riel-backend.model.data.global-exercises)
(load-facts riel-backend.model.data)
(autotest)
(load-facts riel-backend.model.data.global-exercises-test)
(load-facts riel-backend.models.data.global-exercises-test)
(load-facts 'riel-backend.models.data.global-exercises-test)
(check-facts 'riel-backend.models.data.global-exercises-test)
(load-facts)
(pst *me)
quit
(use 'riel-backend.model.data.global-exercises)
(use 'riel-backend.models.data.global-exercises)
(delete-global-exercises db)
(def conn (mg/connect { :host "localhost" }))
(def db (mg/get-db conn "riel"))
(delete-global-exercises riel-backend.models.store/db)
(riel-backend.models.store/db)
(riel-backend.models.store.db)
(in-ns 'riel-backend.models.store)
(db)
(def conn (mg/connect { :host "localhost" })
)
(def conn (mg/connect { :host "localhost" }))
(last [])
(in-ns 'user)
(last [])
(use 'midje-repl)
(use 'midje.repl)
(load-facts 'riel-backend.models.store)
(load-facts 'riel-backend.models.*)
(load-facts 'riel-backend.models.store)
(load-facts 'riel-backend.models.*)
quit
(use 'midje.repl)
(load-facts 'riel-backend.models.*)
(load-facts 'riel-backend.models.store-test)
(load-facts 'riel-backend.models.store)
(load-facts 'riel-backend.models.store-test)
(load-facts 'riel-backend.models.store)
(load-facts 'riel-backend.models.*)
(load-facts 'riel-backend.models.store)
(load-facts 'riel-backend.models.store-test)
(load-facts 'riel-backend.models.store)
(load-facts 'riel-backend.models.store-test)
quit
(require '[midje.repl :as midje])
quit
(require '[midje.repl :as midje])
(midje/autotest)
